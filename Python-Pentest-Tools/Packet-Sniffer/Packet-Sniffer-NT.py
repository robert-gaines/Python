from scapy.arch.windows import get_windows_if_list
from pprint import pprint
from scapy.all import *
import datetime
import time

dateObject = datetime.datetime.now()
#
dateString = dateObject.strftime("%A%d%B")
#
timeStamp = time.ctime() ; stampList = timeStamp.split(' ')
#
timeValue = stampList[4] ; timeValue = str(timeValue)
#
valueList = timeValue.split(':') ; timeStr = "" ; timeStr = timeStr.join(valueList)
#
filename = dateString+timeStr+"_capture.txt"
#
fileObject = open(filename,'w')

def Parser(pkt):
    #
    try:
            #
        if(pkt):
                #
                sourceMac = pkt[Ether].src ; destinationMac = pkt[Ether].dst 
                #
                sourceIP = pkt[IP].src ; destinationIP = pkt[IP].dst
                #
                timeStamp = time.ctime()
                try:
                        if(pkt[TCP]):
                                #
                                SourcePort = pkt[TCP].sport
                                #
                                DestinationPort = pkt[TCP].dport 
                                #
                        elif(pkt[UDP]):
                                #
                                SourcePort = pkt[UDP].sport 
                                #
                                DestinationPort = pkt[UDP].dport
                                #
                except:
                        SourcePort = 'NULL'
                        #
                        DestinationPort = 'NULL'
                        #
                print("""
 T: %s | SRC MAC: %s | SRC IP: %s    \t | SRC Port: %s \t | DST MAC: %s | DST IP: %s        \t | DST Port: %s
                      """ % (timeStamp,sourceMac,sourceIP,SourcePort,destinationMac,destinationIP,DestinationPort))
                #
                fileObject.write("T: %s | SRC MAC: %s | SRC IP: %s    \t | SRC Port: %s \t | DST MAC: %s | DST IP: %s        \t | DST Port: %s\n" % (timeStamp,sourceMac,sourceIP,SourcePort,destinationMac,destinationIP,DestinationPort)) 
                #
    except KeyboardInterrupt:
            #
            fileObject.close()
            #
    except:
            #
            pass
            #

def main():
    #
    print("""
***********************************
*                                 *
*    ___           _        _     *
*   / _ \__ _  ___| | _____| |_   *
*  / /_)/ _` |/ __| |/ / _ \ __|  *
* / ___/ (_| | (__|   <  __/ |_   *
* \/    \__,_|\___|_|\_\___|\__|  *
*                                 *
*   __       _  __  __            *
*  / _\_ __ (_)/ _|/ _| ___ _ __  *
*  \ \| '_ \| | |_| |_ / _ \ '__| *
* _ \ \ | | | |  _|  _|  __/ |    *
* \__/ _| |_|_|_| |_|  \___|_|    *
*                                 *
*                                 *
***********************************                              
          """)
    #
    conf.verb = 0
    #
    interfaces = get_windows_if_list()
    #
    print("[*] Interfaces [*]")
    #
    print("------------------")
    #
    for i in range(0,len(interfaces)):
            #
            print i,")\t",interfaces[i]['name']
            #
    index = int(input("[+] Enter the interface index-> "))
    #
    interface = interfaces[index]['name']
    #
    headerString = "[*] Capture Interface: %s [*]\n" % interface
    #
    fileObject.write("[*] Capture Interface: %s [*]\n" % interface)
    #
    fileObject.write("-"*(len(headerString)-1))
    #
    fileObject.write('\n')
    #    
    print("[*] Starting sniffer on: %s ..." % interface)
    #
    sniff(filter="",store=False,iface=r'%s'%interface,prn=Parser)

if(__name__ == '__main__'):
        #
        main()
